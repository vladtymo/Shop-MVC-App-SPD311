// <auto-generated />
using System;
using MVC_App_SPD311.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_App_SPD311.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    [Migration("20250405115009_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_App_SPD311.Models.FavoriteItem", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId1");

                    b.ToTable("FavoriteItems");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Goals")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("FootballPlayers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1987, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lionel",
                            Goals = 750,
                            LastName = "Messi",
                            Number = 10,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1985, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Cristiano",
                            Goals = 800,
                            LastName = "Ronaldo",
                            Number = 7,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1992, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Neymar",
                            Goals = 350,
                            LastName = "Jr",
                            Number = 11,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1998, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kylian",
                            Goals = 250,
                            LastName = "Mbappe",
                            Number = 7,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1988, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            Goals = 500,
                            LastName = "Lewandowski",
                            Number = 9,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1991, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kevin",
                            Goals = 150,
                            LastName = "De Bruyne",
                            Number = 17,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(2000, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Erling",
                            Goals = 200,
                            LastName = "Haaland",
                            Number = 9,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1992, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mohamed",
                            Goals = 300,
                            LastName = "Salah",
                            Number = 11,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1991, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Virgil",
                            Goals = 50,
                            LastName = "van Dijk",
                            Number = 4,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1986, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sergio",
                            Goals = 100,
                            LastName = "Ramos",
                            Number = 4,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 11,
                            Birthdate = new DateTime(1987, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Karim",
                            Goals = 400,
                            LastName = "Benzema",
                            Number = 9,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 12,
                            Birthdate = new DateTime(1985, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Luka",
                            Goals = 120,
                            LastName = "Modric",
                            Number = 10,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 13,
                            Birthdate = new DateTime(1993, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Harry",
                            Goals = 350,
                            LastName = "Kane",
                            Number = 10,
                            TeamId = 17
                        },
                        new
                        {
                            Id = 14,
                            Birthdate = new DateTime(1992, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Son",
                            Goals = 200,
                            LastName = "Heung-min",
                            Number = 7,
                            TeamId = 17
                        },
                        new
                        {
                            Id = 15,
                            Birthdate = new DateTime(1994, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bruno",
                            Goals = 180,
                            LastName = "Fernandes",
                            Number = 8,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 16,
                            Birthdate = new DateTime(1997, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marcus",
                            Goals = 150,
                            LastName = "Rashford",
                            Number = 10,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 17,
                            Birthdate = new DateTime(1991, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Antoine",
                            Goals = 250,
                            LastName = "Griezmann",
                            Number = 7,
                            TeamId = 14
                        },
                        new
                        {
                            Id = 18,
                            Birthdate = new DateTime(1993, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Paulo",
                            Goals = 150,
                            LastName = "Dybala",
                            Number = 21,
                            TeamId = 16
                        },
                        new
                        {
                            Id = 19,
                            Birthdate = new DateTime(1993, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Romelu",
                            Goals = 250,
                            LastName = "Lukaku",
                            Number = 9,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 20,
                            Birthdate = new DateTime(1995, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Joshua",
                            Goals = 100,
                            LastName = "Kimmich",
                            Number = 6,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 21,
                            Birthdate = new DateTime(2000, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alphonso",
                            Goals = 50,
                            LastName = "Davies",
                            Number = 19,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 22,
                            Birthdate = new DateTime(2000, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jadon",
                            Goals = 90,
                            LastName = "Sancho",
                            Number = 25,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 23,
                            Birthdate = new DateTime(1995, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jack",
                            Goals = 80,
                            LastName = "Grealish",
                            Number = 10,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 24,
                            Birthdate = new DateTime(2000, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Phil",
                            Goals = 100,
                            LastName = "Foden",
                            Number = 47,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 25,
                            Birthdate = new DateTime(2002, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pedri",
                            Goals = 50,
                            LastName = "",
                            Number = 8,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 26,
                            Birthdate = new DateTime(2004, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gavi",
                            Goals = 40,
                            LastName = "",
                            Number = 30,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 27,
                            Birthdate = new DateTime(1999, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Declan",
                            Goals = 60,
                            LastName = "Rice",
                            Number = 41,
                            TeamId = 12
                        },
                        new
                        {
                            Id = 28,
                            Birthdate = new DateTime(2003, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jude",
                            Goals = 70,
                            LastName = "Bellingham",
                            Number = 22,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 29,
                            Birthdate = new DateTime(2000, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vinicius",
                            Goals = 90,
                            LastName = "Jr",
                            Number = 20,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 30,
                            Birthdate = new DateTime(2002, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Eduardo",
                            Goals = 50,
                            LastName = "Camavinga",
                            Number = 12,
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FootballTeams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Spain",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/4/47/FC_Barcelona_%28crest%29.svg",
                            Name = "FC Barcelona"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Spain",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/5/56/Real_Madrid_CF.svg",
                            Name = "Real Madrid"
                        },
                        new
                        {
                            Id = 3,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/7/7a/Manchester_United_FC_crest.svg",
                            Name = "Manchester United"
                        },
                        new
                        {
                            Id = 4,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/e/eb/Manchester_City_FC_badge.svg",
                            Name = "Manchester City"
                        },
                        new
                        {
                            Id = 5,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/0/0c/Liverpool_FC.svg",
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 6,
                            Country = "France",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/a/a7/Paris_Saint-Germain_F.C..svg",
                            Name = "Paris Saint-Germain"
                        },
                        new
                        {
                            Id = 7,
                            Country = "Germany",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/c/c5/Bayern_Munich_logo_%282017%29.svg",
                            Name = "Bayern Munich"
                        },
                        new
                        {
                            Id = 8,
                            Country = "Germany",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/6/67/Borussia_Dortmund_logo.svg",
                            Name = "Borussia Dortmund"
                        },
                        new
                        {
                            Id = 9,
                            Country = "Italy",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/d/d2/Juventus_FC_2017_logo.svg",
                            Name = "Juventus"
                        },
                        new
                        {
                            Id = 10,
                            Country = "Italy",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/0/05/Inter_Milan_2021_logo.svg",
                            Name = "Inter Milan"
                        },
                        new
                        {
                            Id = 11,
                            Country = "Italy",
                            Logo = "https://upload.wikimedia.org/wikipedia/commons/d/d0/Logo_of_AC_Milan.svg",
                            Name = "AC Milan"
                        },
                        new
                        {
                            Id = 12,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/5/53/Arsenal_FC.svg",
                            Name = "Arsenal"
                        },
                        new
                        {
                            Id = 13,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/c/cc/Chelsea_FC.svg",
                            Name = "Chelsea"
                        },
                        new
                        {
                            Id = 14,
                            Country = "Spain",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/f/f4/Atletico_Madrid_2017_logo.svg",
                            Name = "Atletico Madrid"
                        },
                        new
                        {
                            Id = 15,
                            Country = "Italy",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/2/28/SSC_Napoli.svg",
                            Name = "Napoli"
                        },
                        new
                        {
                            Id = 16,
                            Country = "Italy",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/0/04/AS_Roma_logo_%282017%29.svg",
                            Name = "AS Roma"
                        },
                        new
                        {
                            Id = 17,
                            Country = "England",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/b/b4/Tottenham_Hotspur.svg",
                            Name = "Tottenham Hotspur"
                        },
                        new
                        {
                            Id = 18,
                            Country = "Spain",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/8/86/Sevilla_FC_logo.svg",
                            Name = "Sevilla"
                        },
                        new
                        {
                            Id = 19,
                            Country = "Germany",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/a/a5/RB_Leipzig_2014_logo.svg",
                            Name = "RB Leipzig"
                        },
                        new
                        {
                            Id = 20,
                            Country = "Netherlands",
                            Logo = "https://upload.wikimedia.org/wikipedia/en/7/7f/Ajax_Amsterdam.svg",
                            Name = "Ajax"
                        });
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.FavoriteItem", b =>
                {
                    b.HasOne("MVC_App_SPD311.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_App_SPD311.Models.User", null)
                        .WithMany("FavoriteItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_App_SPD311.Models.Team", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.Player", b =>
                {
                    b.HasOne("MVC_App_SPD311.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.User", b =>
                {
                    b.HasOne("MVC_App_SPD311.Models.Team", null)
                        .WithMany("InFavoriteUsers")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.Team", b =>
                {
                    b.Navigation("InFavoriteUsers");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("MVC_App_SPD311.Models.User", b =>
                {
                    b.Navigation("FavoriteItems");
                });
#pragma warning restore 612, 618
        }
    }
}
